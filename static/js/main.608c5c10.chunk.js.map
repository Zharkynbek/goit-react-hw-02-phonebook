{"version":3,"sources":["components/Phonebook/PhonebookForm.js","components/Phonebook/PhonebookList.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["PhonebookForm","onAddContact","onChangeNumber","onChangeName","action","htmlFor","onInput","e","target","value","type","name","pattern","title","required","PhonebookList","contacts","onDeleteContacts","map","number","id","onClick","Phonebook","state","handleAddContact","preventDefault","setState","prev","shortid","generate","reset","deleteContacts","contactIt","prevState","filter","contact","handleChangeName","handleChangeNumber","this","Component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAoCeA,EAlCO,SAAC,GAAoD,IAAD,EAAjDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACrD,OACE,8BACE,0BAAMC,OAAO,IAAb,uBAAuB,UAAvB,yBAA0CH,GAA1C,0BACE,wBAAOI,QAAQ,GAAf,UACE,2CACA,uBACEC,QAAS,SAACC,GAAD,OAAOJ,EAAaI,EAAEC,OAAOC,QACtCC,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,kCACE,mDACA,uBACER,QAAS,SAACC,GAAD,OAAOL,EAAeK,EAAEC,OAAOC,QACxCC,KAAK,MACLC,KAAK,SACLC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,uBACA,iDACA,4CAzBF,OCSSC,EAZO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,iBAAb,OACpB,6BACGD,EAASE,KAAI,gBAAGP,EAAH,EAAGA,KAAMQ,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,+BACE,4BAAIT,IACJ,4BAAIQ,IACJ,wBAAQE,QAAS,kBAAMJ,EAAiBG,IAAxC,sBAHOA,SCsDAE,E,4MArDbC,MAAQ,CACNZ,KAAM,GACNQ,OAAQ,GACRH,SAAU,I,EAGZQ,iBAAmB,SAACjB,GAClBA,EAAEkB,iBACF,MAAyB,EAAKF,MAAtBZ,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OACd,EAAKO,UAAS,SAACC,GAAD,MAAW,CACvBX,SAAS,GAAD,mBAAMW,EAAKX,UAAX,CAAqB,CAAEL,OAAMQ,SAAQC,GAAIQ,IAAQC,kBAE3D,EAAKC,S,EAGPA,MAAQ,WACN,EAAKJ,SAAS,CAAEf,KAAM,GAAIQ,OAAQ,M,EAGpCY,eAAiB,SAACC,GAChB,EAAKN,UAAS,SAACO,GAAD,MAAgB,CAC5BjB,SAAUiB,EAAUjB,SAASkB,QAC3B,SAACC,GAAD,OAAaA,EAAQf,KAAOY,U,EAKlCI,iBAAmB,SAACzB,GAClB,EAAKe,SAAS,CAAEf,U,EAGlB0B,mBAAqB,SAAClB,GACpB,EAAKO,SAAS,CAAEP,Y,4CAGlB,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CACElB,aAAcqC,KAAKd,iBACnBtB,eAAgBoC,KAAKD,mBACrBlC,aAAcmC,KAAKF,mBAErB,cAAC,EAAD,CACEnB,iBAAkBqB,KAAKP,eACvBf,SAAUsB,KAAKf,MAAMP,kB,GA/CPuB,aCSTC,E,4JATb,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUC,IAAMF,WCCxBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.608c5c10.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PhonebookForm = ({ onAddContact, onChangeNumber, onChangeName }) => {\r\n  return (\r\n    <div>\r\n      <form action=\"\" action=\"submit\" onSubmit={onAddContact}>\r\n        <label htmlFor=\"\">\r\n          <p>enter name</p>\r\n          <input\r\n            onInput={(e) => onChangeName(e.target.value)}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>enter phone number</p>\r\n          <input\r\n            onInput={(e) => onChangeNumber(e.target.value)}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button>Add Contact</button>\r\n        <h3>Contacts</h3>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import React from \"react\"\r\n\r\nconst PhonebookList = ({ contacts, onDeleteContacts }) => (\r\n  <ul>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id}>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button onClick={() => onDeleteContacts(id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default PhonebookList;","import React, {Component} from \"react\"\r\nimport shortid from \"shortid\";\r\nimport PhonebookForm from \"./PhonebookForm\";\r\nimport PhonebookList from \"./PhonebookList\"\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    contacts: [],\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, { name, number, id: shortid.generate() }],\r\n    }));\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  deleteContacts = (contactIt) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactIt\r\n      ),\r\n    }));\r\n  };\r\n\r\n  handleChangeName = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  handleChangeNumber = (number) => {\r\n    this.setState({ number });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <PhonebookForm\r\n          onAddContact={this.handleAddContact}\r\n          onChangeNumber={this.handleChangeNumber}\r\n          onChangeName={this.handleChangeName}\r\n        />\r\n        <PhonebookList\r\n          onDeleteContacts={this.deleteContacts}\r\n          contacts={this.state.contacts}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook","import React from \"react\";\nimport Phonebook from \"./components/Phonebook/Phonebook\"\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Phonebook />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}