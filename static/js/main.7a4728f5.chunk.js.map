{"version":3,"sources":["components/Phonebook/PhonebookForm.js","components/Phonebook/PhonebookList.js","helpers/filterContacts.js","components/Phonebook/PhonebookFilter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["PhonebookForm","onAddContact","onChangeNumber","onChangeName","name","number","action","onSubmit","htmlFor","onInput","e","target","value","type","pattern","title","required","PhonebookList","contacts","onDeleteContacts","map","id","onClick","filterContacts","filter","contact","toLowerCase","includes","trim","PhonebookFilter","filterName","onChangeFilter","Phonebook","state","handleAddContact","preventDefault","setState","prev","shortid","generate","reset","deleteContacts","contactIt","prevState","handleChangeName","handleChangeNumber","handleChangeFilter","filteredContacts","this","Component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a4728f5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst PhonebookForm = ({ onAddContact, onChangeNumber, onChangeName, name, number }) => {\r\n  return (\r\n    <div>\r\n      <form action=\"submit\" onSubmit={onAddContact}>\r\n        <label htmlFor=\"\">\r\n          <p>enter name</p>\r\n          <input\r\n            onInput={(e) => onChangeName(e.target.value)}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>enter phone number</p>\r\n          <input\r\n            onInput={(e) => onChangeNumber(e.target.value)}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button>Add Contact</button>\r\n        <h3>Contacts</h3>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import React from \"react\"\r\n\r\nconst PhonebookList = ({ contacts, onDeleteContacts }) => (\r\n  <ul>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id}>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button onClick={() => onDeleteContacts(id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default PhonebookList;","const filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    })\r\n}\r\n\r\nexport default filterContacts;","import React from \"react\"\r\n\r\n\r\nconst PhonebookFilter = ({ filterName, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        <p>Filter contacts</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id=\"\"\r\n          value={filterName}\r\n          onInput={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default PhonebookFilter;","import React, {Component} from \"react\"\r\nimport shortid from \"shortid\";\r\nimport PhonebookForm from \"./PhonebookForm\";\r\nimport PhonebookList from \"./PhonebookList\"\r\nimport filterContacts from \"../../helpers/filterContacts\"\r\nimport PhonebookFilter from \"./PhonebookFilter\"\r\n\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    filter: \"\",\r\n    contacts: [],\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, { name, number, id: shortid.generate() }],\r\n    }));\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  deleteContacts = (contactIt) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactIt\r\n      ),\r\n    }));\r\n  };\r\n\r\n  handleChangeName = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  handleChangeNumber = (number) => {\r\n    this.setState({ number });\r\n  };\r\n\r\n  handleChangeFilter = ({target: {name, value}}) => {\r\n    this.setState({[name]:value})\r\n  }\r\n\r\n  render() {\r\n    const filteredContacts = filterContacts(this.state.contacts, this.state.filter)\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <PhonebookForm\r\n          onAddContact={this.handleAddContact}\r\n          onChangeNumber={this.handleChangeNumber}\r\n          onChangeName={this.handleChangeName}\r\n          name={this.state.name}\r\n          number={this.state.number}\r\n        />\r\n        <PhonebookFilter\r\n          filterName={this.state.filter}\r\n          onChangeFilter={this.handleChangeFilter}\r\n        />\r\n        <PhonebookList\r\n          onDeleteContacts={this.deleteContacts}\r\n          contacts={filteredContacts}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook","import React from \"react\";\nimport Phonebook from \"./components/Phonebook/Phonebook\"\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Phonebook />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}